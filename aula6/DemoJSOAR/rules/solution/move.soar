sp {solution*propose*move*jewel
   (state <s> ^name solution
              ^position <position>
              ^memory.ENTITY <entity>
              ^distances <distances>
              ^knapsack <knapsack>
              ^traveledDistance <traveledDistance>
              ^desired <desired>)
   (<position> ^X <x>
               ^Y <y>)
   (<entity> ^X { <entityPositionX> <> <x> }
             ^Y { <entityPositionY> <> <y> }
             ^NAME <entityName>
             ^TYPE JEWEL
             ^COLOR <color>)
   (<distances> ^<entity> { <DISTANCE> > 30 }) # move only if distance is greater than 30
   # filter colors only that are missing in some leaflet
   (<desired> ^<color> <desiredQuantity>)
   (<knapsack> ^<color> { <quantity> < <desiredQuantity> })
-->
   (<s> ^operator <o> +)
   (<o> ^name move)
   (<o> ^parameter <p>)
   (<p> ^ENTITY <entity>
        ^NAME <entityName>
        ^X <entityPositionX>
        ^Y <entityPositionY>
        ^DISTANCE <DISTANCE>)
#   (write (crlf) | propose move (to jewel): name = | <entityName> | distance = | <DISTANCE> ||)
}
   
sp {solution*propose*move*delivery-spot
   (state <s> ^name solution
              ^position <position>
              ^memory.ENTITY <entity>
              ^distances <distances>
              ^deliverySpot <deliverySpot>
              ^delivered false
              ^readyToDeliver true)
   (<distances> ^<entity> { <DISTANCE> > 30 }) # move only if distance is greater than 30
   (<position> ^X <x>
               ^Y <y>)
   (<entity> ^X { <entityPositionX> <> <x> }
             ^Y { <entityPositionY> <> <y> }
             ^NAME deliverySpot)
-->
   (<s> ^operator <o> +)
   (<o> ^name move
        ^parameter <p>)
   (<p> ^ENTITY <entity>
        ^NAME deliverySpot
        ^X <entityPositionX>
        ^Y <entityPositionY>
        ^DISTANCE <DISTANCE>)
#   (write (crlf) | propose move (to deliverySpot) |)
}

sp {solution*apply*move
   (state <s> 
        ^operator <o>
        ^position <position>
        ^distances <distances>
        ^traveledDistance <traveledDistance>)
   (<position> ^X <oldX>
               ^Y <oldY>)
   (<o> ^name move
        ^parameter <p>)
   (<p> ^ENTITY <entity>
        ^NAME <entityName>
        ^DISTANCE <DISTANCE>
        ^X <x>
        ^Y <y>)
-->
   (<position> ^X <oldX> -
               ^Y <oldY> -
               ^X <x>
               ^Y <y>)
   #   (<s> ^actions <actions>)
   #   (<actions> ^MOVE <command>)
   #   (<command> ^Vel 1)
   #   (<command> ^VelR 1)
   #   (<command> ^VelL 1)
   #   (<command> ^X <x>)
   #   (<command> ^Y <y>)
   (<distances> ^<entity> <DISTANCE> - ^<entity> 0)
   (<s> ^traveledDistance <traveledDistance> -
        ^traveledDistance (+ <traveledDistance> <DISTANCE>))
   (write (crlf) | apply move: name = | <entityName> | traveledDistance = | <traveledDistance> | + | <DISTANCE> ||)
   #(write (crlf) | apply move: name = | <entityName> | distance = | <DISTANCE> ||)
}

#sp {solution*apply*move*test
#   (state <s> 
#        ^operator <o>
#        ^position <position>
#        ^traveledDistance <traveledDistance>)
#   (<position> ^X <oldX>
#               ^Y <oldY>)
#   (<o> ^name move
#        ^parameter <p>)
#   (<p> ^NAME <entityName>
#        ^DISTANCE <DISTANCE>
#        ^X <x>
#        ^Y <y>)
#-->
#   (<position> ^X <oldX> -
#               ^Y <oldY> -
#               ^X <x>
#               ^Y <y>)
#   (write (cmd print --depth 2 <s>))
#   (write (crlf) | *********** apply move test: traveledDistance = | <traveledDistance> | + | <DISTANCE> ||)
#   #(write (crlf) | apply move: name = | <entityName> | distance = | <DISTANCE> ||)
#}
