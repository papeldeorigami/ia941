sp {solution*propose*see
   (state <s> ^name solution
              ^memory <memory>
              ^io.input-link.CREATURE <creature>)
   (<creature> ^SENSOR.VISUAL.ENTITY <entity>)
   (<entity> ^TYPE <type>
             ^NAME <name>)
  -(<memory> ^ENTITY.NAME <name>)
-->
   (<s> ^operator <op> + =)
   (<op> ^name see)
   (write (crlf) | propose see: name = | <name> ||)
}

sp {solution*apply*see*new
   (state <s> ^operator <op>
              ^memory <memory>
              ^io.input-link.CREATURE <creature>)
   (<op> ^name see)
   (<creature> ^SENSOR.VISUAL.ENTITY <entity>)
   (<entity> ^X <x>
             ^Y <y>
             ^NAME <name>
             ^TYPE <type>
             ^COLOR <color>
             ^DISTANCE <distance>)
  -(<memory> ^ENTITY.NAME <name>)
-->
   (<memory> ^ENTITY <newEntity>)
   (<newEntity> ^X <x>
                ^Y <y>
                ^NAME <name>
                ^TYPE <type>
                ^COLOR <color>
                ^DISTANCE <distance>)
   (write (crlf) | apply see*new: name = | <name> | x = | <x> | y = | <y> | color = | <color> | distance = | <distance> ||)
}

# update the entity distances in memory with information from the input link
sp {solution*apply*see*update-distance
   (state <s> ^operator <op>
              ^memory <memory>)
   (<op> ^name see
         ^parameter <newEntity>)
   (<newEntity> ^Name <name>
                ^DISTANCE <distance>)
   (<memory> ^ENTITY <memoryEntity>)
   (<memoryEntity> ^NAME <name>)
   (<memoryEntity> ^DISTANCE { <oldDistance> <> <distance> })
-->
   (<memoryEntity> ^DISTANCE <oldDistance> -
                   ^DISTANCE <distance>)
   (write (crlf) | apply see*update-distance: name = | <name> | distance = | <distance> ||)
}
