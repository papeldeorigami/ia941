sp {propose*get
   (state <s> ^name solution
              ^desired.knapsack <dk>
              ^memory <memory>
              ^knapsack <knapsack>
              ^position <position>)
   (<position> ^X <creaturePositionX>)
   (<position> ^Y <creaturePositionY>)
   # find a jewel
   (<memory> ^ENTITY <entity>)
   (<entity> ^X <entityPositionX>)
   (<entity> ^Y <entityPositionY>)
   (<entity> ^NAME <entityName>)
   (<entity> ^TYPE JEWEL)
   (<entity> ^COLOR <color>)
   # move only if distance is less than 30
   (<entity> ^DISTANCE { <DISTANCE> < 30 })
   # filter colors only that are missing in some leaflet
   (<dk> ^<color> <desiredQuantity>)
   (<knapsack> ^<color> { <quantity> < <desiredQuantity> })
-->
   (<s> ^operator <o> +)
   (<o> ^name get)
   (<o> ^parameter <p>)
   (<p> ^NAME <entityName>)
   (write (crlf) | propose get: name = | <entityName> | distance = | <DISTANCE> ||)
}

sp {solution*apply*get
   (state <s> ^operator <o>
              ^io.input-link.CREATURE <creature>
              ^knapsack <knapsack>
              ^memory <memory>
              ^desired.knapsack <dk>)
   (<o> ^name get
        ^parameter <p>)
   (<p> ^NAME <name>)
   (<creature> ^SENSOR.VISUAL <visual>)
   (<visual> ^ENTITY <visualEntity>)
   (<visualEntity> ^NAME <name>)
   (<memory> ^ENTITY <memoryEntity>)
   (<memoryEntity> ^NAME <name>)
   (<memoryEntity> ^COLOR <color>)
   (<knapsack> ^<color> <quantity>
               ^Red <kred>
               ^Green <kgreen>
               ^Blue <kblue>
               ^Yellow <kyellow>
               ^Magenta <kmagenta>
               ^White <kwhite>)
   (<dk> ^<color> <dquantity>
              ^Red <dred>
              ^Green <dgreen>
              ^Blue <dblue>
              ^Yellow <dyellow>
              ^Magenta <dmagenta>
              ^White <dwhite>)
-->
   (<memory> ^ENTITY <memoryEntity> -)
   (<visual> ^ENTITY <visualEntity> -)
   (<knapsack> ^<color> <quantity> - (+ <quantity> 1))
   (write (crlf) | apply get: name = | <name> | Knapsack was: |)
   (write (crlf) | Red=| <kred> |/| <dred> ||)
   (write (crlf) | Green=| <kgreen> |/| <dgreen> ||)
   (write (crlf) | Blue=| <kblue> |/| <dblue> ||)
   (write (crlf) | Yellow=| <kyellow> |/| <dyellow> ||)
   (write (crlf) | Magenta=| <kmagenta> |/| <dmagenta> ||)
   (write (crlf) | White=| <kwhite> |/| <dwhite> ||)
   (write (crlf) <color> | is now | (+ <quantity> 1) |/| <dquantity> ||)
}

sp {solution*apply*get*evaluate*readyToDeliver
   (state <s> ^operator.name get
              ^knapsack <k>
              ^desired.knapsack <dk>)
   
   ### FAZER o COUNT
-->
   (<s> ^readyToDeliver false -
        ^readyToDeliver true)
   (write (crlf) | **** Ready to deliver!|)
}

