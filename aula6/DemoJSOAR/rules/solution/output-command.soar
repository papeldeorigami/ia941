sp {evaluate*output-command*continue
   (state <s> ^io.output-link <out>)
   (<out> ^<command>)
-->
   (write (crlf) | Continue command | <command> ||)
   (interrupt)
}

sp {apply*output-command*move
   (state <s> ^operator.name output-command
              ^actions.MOVE <move>
              ^io.output-link <out>)
  -(<out> ^MOVE)
   (<move> ^X <x>
           ^Y <y>
           ^VelL <velL>
           ^VelR <velR>
           ^Vel <vel>)
-->
   (<s> ^actions MOVE -)
   (<out> ^MOVE <moveOut>)
   (<moveOut>
          ^X <x>
          ^Y <y>
          ^VelL <velL>
          ^VelR <velR>
          ^Vel <vel>)
   (write (crlf) | ***** output command MOVE parameter X=| <x> | Y=| <y> | VelL=| <velL> | VelR=| <velR> | Vel=| <vel> ||)
   (interrupt)
}

sp {apply*output-command*get
   (state <s> ^operator.name output-command
              ^actions.GET <get>
              ^io.output-link <out>)
   (<get> ^Name <name>)
-->
   (<s> ^actions GET -)
   (<out> ^GET <getOut>)
   (<getOut> ^Name <name>)
   (write (crlf) | ***** output command GET parameter Name=| <name> ||)
   (interrupt)
}


sp {apply*output-command*remove-complete
   (state <s> ^operator.name output-command
              ^actions <actions>
              ^io.output-link <out>)
   (<out> ^<att> <value>)
   (<value> ^status complete)
-->
   (<out> ^<att> <value> -)
   (write (crlf) | finished command: | <att> ||)
   (interrupt)
}
